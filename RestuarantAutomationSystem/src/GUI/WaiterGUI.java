/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import java.util.ArrayList;
import java.util.Hashtable;
import java.util.LinkedList;
import javax.swing.DefaultListModel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.WindowConstants;
import restuarantautomationsystem.Controller;
import restuarantautomationsystem.*;

/**
 *
 * @author karpagaganeshpatchirajan
 */
public class WaiterGUI extends javax.swing.JFrame {
    
    String empID ="";
    Hashtable<Integer,LinkedList<OrderLineItem>> cacheordermap = new Hashtable<Integer,LinkedList<OrderLineItem>>();
    int OrderIdForAlert ;
    /**
     * Creates new form WaiterGUI
     */
    public WaiterGUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        nameText = new javax.swing.JTextField();
        WaiterGUITableText = new javax.swing.JTextField();
        changeTableStatusButton = new javax.swing.JButton();
        newOrderButton = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        tabbedPanel = new javax.swing.JTabbedPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        categoriesList = new javax.swing.JList();
        itemTabbedPanel = new javax.swing.JTabbedPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        itemList = new javax.swing.JList();
        descriptionTabbedPanel = new javax.swing.JTabbedPane();
        descriptionTextBox = new javax.swing.JTextField();
        countPanel = new javax.swing.JPanel();
        quantityTextBox = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        addButton = new javax.swing.JButton();
        doneButton = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Waiter Operation Screen");

        jLabel2.setText("Employee Name");

        changeTableStatusButton.setText("Update Table Status");
        changeTableStatusButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeTableStatusButtonActionPerformed(evt);
            }
        });

        newOrderButton.setText("Make New Order");
        newOrderButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newOrderButtonActionPerformed(evt);
            }
        });

        jButton3.setText("Modify Order");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Cancel Order");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton1.setText("Assigned Table");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        categoriesList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        categoriesList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                categoriesListValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(categoriesList);

        tabbedPanel.addTab("Category", jScrollPane1);

        itemTabbedPanel.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                itemTabbedPanelInputMethodTextChanged(evt);
            }
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
        });

        itemList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        itemList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                itemListValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(itemList);

        itemTabbedPanel.addTab("Item", jScrollPane2);

        descriptionTabbedPanel.addTab("Description", descriptionTextBox);

        quantityTextBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quantityTextBoxActionPerformed(evt);
            }
        });

        jLabel3.setText("Quantity");

        addButton.setText("Add");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        doneButton.setText("Done");
        doneButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doneButtonActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout countPanelLayout = new org.jdesktop.layout.GroupLayout(countPanel);
        countPanel.setLayout(countPanelLayout);
        countPanelLayout.setHorizontalGroup(
            countPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(countPanelLayout.createSequentialGroup()
                .add(countPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(countPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .add(quantityTextBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 116, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(18, 18, 18)
                        .add(addButton)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(doneButton))
                    .add(countPanelLayout.createSequentialGroup()
                        .add(14, 14, 14)
                        .add(jLabel3)))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        countPanelLayout.setVerticalGroup(
            countPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, countPanelLayout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .add(jLabel3)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(countPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(quantityTextBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(addButton)
                    .add(doneButton))
                .add(12, 12, 12))
        );

        jButton2.setText("Close");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(80, 80, 80)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jButton1)
                            .add(layout.createSequentialGroup()
                                .add(14, 14, 14)
                                .add(jLabel2)))
                        .add(74, 74, 74)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(nameText, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 205, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(layout.createSequentialGroup()
                                .add(WaiterGUITableText)
                                .add(102, 102, 102))))
                    .add(layout.createSequentialGroup()
                        .add(changeTableStatusButton)
                        .add(35, 35, 35)
                        .add(newOrderButton)
                        .add(32, 32, 32)
                        .add(jButton3)
                        .add(33, 33, 33)
                        .add(jButton4))
                    .add(layout.createSequentialGroup()
                        .add(tabbedPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 150, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(itemTabbedPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 150, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(layout.createSequentialGroup()
                                .add(6, 6, 6)
                                .add(countPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .add(descriptionTabbedPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 244, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(48, Short.MAX_VALUE))
            .add(layout.createSequentialGroup()
                .add(274, 274, 274)
                .add(jLabel1)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(jButton2)
                .add(39, 39, 39))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(58, 58, 58)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel1)
                    .add(jButton2))
                .add(15, 15, 15)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel2)
                    .add(nameText, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(18, 18, 18)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(WaiterGUITableText, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jButton1))
                .add(26, 26, 26)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(changeTableStatusButton)
                    .add(jButton3)
                    .add(newOrderButton)
                    .add(jButton4))
                .add(18, 18, 18)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(tabbedPanel)
                    .add(itemTabbedPanel)
                    .add(layout.createSequentialGroup()
                        .add(descriptionTabbedPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 110, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(countPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(15, 15, 15)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void newOrderButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newOrderButtonActionPerformed
        // TODO add your handling code here:
        if(WaiterGUITableText.getText().equalsIgnoreCase("")){
            JOptionPane.showMessageDialog(null, "Select Assigned Table");
        }else{
            Controller controller = new Controller();        
            Hashtable<Integer,LinkedList<OrderLineItem>> ordermap = controller.makeNewOrder(WaiterGUITableText.getText());
            cacheordermap = ordermap;
            tabbedPanel.setVisible(true);
            ArrayList<String> categories = controller.addNewItemButton();
            DefaultListModel category = new DefaultListModel();

            for(int i=0;i<categories.size();i++){
                category.add(i, categories.get(i));
            }
            categoriesList.setModel(category);
        }
        
    }//GEN-LAST:event_newOrderButtonActionPerformed

    private void changeTableStatusButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changeTableStatusButtonActionPerformed
        // TODO add your handling code here:
        if(WaiterGUITableText.getText().equalsIgnoreCase("")){
            JOptionPane.showMessageDialog(null, "Select Assigned Table");        
        }
        else{
            Controller controller = new Controller();
        
            String status = "Handling Order";

            boolean ack = controller.changeTableStatus(status,WaiterGUITableText.getText());
            if(ack){
                 JOptionPane.showMessageDialog(null, "Table Status Changed"); 
            }
            else{
                JOptionPane.showMessageDialog(null, "Error!! Table Status not changed");
            }
        }
        
    }//GEN-LAST:event_changeTableStatusButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        AssignedTableSelectionGUI assignTable = new AssignedTableSelectionGUI();
      
       assignTable.selectAssignedTable(empID);
       String table = assignTable.getAssignedTable(empID);
       table = assignTable.getAssignedTable(empID);
        
       WaiterGUITableText.setText(table);
       
    }//GEN-LAST:event_jButton1ActionPerformed
    
    
    
    private void categoriesListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_categoriesListValueChanged
        // TODO add your handling code here:
        Controller controller = new Controller();
        ArrayList<String> menuItems = controller.getMenuItems(categoriesList.getSelectedValue());
        
        DefaultListModel items = new DefaultListModel();
        
        for(int i=0;i<menuItems.size();i++){
            items.add(i, menuItems.get(i));
        }
        itemList.setModel(items);
        itemTabbedPanel.setVisible(true);
        descriptionTabbedPanel.setVisible(false);
        countPanel.setVisible(false);
    }//GEN-LAST:event_categoriesListValueChanged

    private void itemListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_itemListValueChanged
        // TODO add your handling code here:
        Controller controller = new Controller();
        String itemDescription = controller.getMenuItemDescription(categoriesList.getSelectedValue(),itemList.getSelectedValue());
        descriptionTextBox.setText(itemDescription);
        descriptionTabbedPanel.setVisible(true);
        descriptionTextBox.setEditable(false);
        countPanel.setVisible(true);
        quantityTextBox.setText("1");
                
    }//GEN-LAST:event_itemListValueChanged

    private void itemTabbedPanelInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_itemTabbedPanelInputMethodTextChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_itemTabbedPanelInputMethodTextChanged

    private void quantityTextBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quantityTextBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_quantityTextBoxActionPerformed

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        // TODO add your handling code here:
        Controller addButton = new Controller();
        int itemID = addButton.getItemID(categoriesList.getSelectedValue(),itemList.getSelectedValue());
        int quantity = Integer.parseInt(quantityTextBox.getText());
        cacheordermap = addButton.addItemToOrderLine(itemID,quantity,cacheordermap);
        quantityTextBox.setText(null);
        descriptionTextBox.setText(null);
    }//GEN-LAST:event_addButtonActionPerformed

    private void doneButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doneButtonActionPerformed
        // TODO add your handling code here:
        Controller submit = new Controller();
        boolean flagOrder = submit.submitOrderToOrderQueue(cacheordermap);
        
        if(flagOrder){
        quantityTextBox.setText(null);
        descriptionTextBox.setText(null);
        ConfirmOrderGUI confirmOrder = new ConfirmOrderGUI();
        confirmOrder.showGUI(cacheordermap);
        confirmOrder.loadContents(cacheordermap);
        }
        tabbedPanel.setVisible(false);
        itemTabbedPanel.setVisible(false);
        descriptionTabbedPanel.setVisible(false);
        countPanel.setVisible(false);
    }//GEN-LAST:event_doneButtonActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        if(WaiterGUITableText.getText().equalsIgnoreCase("")){
            JOptionPane.showMessageDialog(null, "Select Assigned Table");        
        }
        else{
            tabbedPanel.setVisible(true);
            
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        if(WaiterGUITableText.getText().equalsIgnoreCase("")){
            JOptionPane.showMessageDialog(null, "Select Assigned Table");        
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        super.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(WaiterGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(WaiterGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(WaiterGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(WaiterGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new WaiterGUI().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JTextField WaiterGUITableText;
    private javax.swing.JButton addButton;
    private javax.swing.JList categoriesList;
    private javax.swing.JButton changeTableStatusButton;
    private javax.swing.JPanel countPanel;
    private javax.swing.JTabbedPane descriptionTabbedPanel;
    private javax.swing.JTextField descriptionTextBox;
    private javax.swing.JButton doneButton;
    private javax.swing.JList itemList;
    private javax.swing.JTabbedPane itemTabbedPanel;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField nameText;
    private javax.swing.JButton newOrderButton;
    private javax.swing.JTextField quantityTextBox;
    private javax.swing.JTabbedPane tabbedPanel;
    // End of variables declaration//GEN-END:variables

    void showGUI(String emp) {
        
        this.setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);
        this.setVisible(true);
        this.empID = emp;
        WaiterGUITableText.setEditable(false);
        quantityTextBox.setText("1");
        nameText.setEditable(false);
        nameText.setText(Controller.getEmployeeName(empID));
        tabbedPanel.setVisible(false);
        itemTabbedPanel.setVisible(false);
        descriptionTabbedPanel.setVisible(false);
        countPanel.setVisible(false);
    }

    
}
